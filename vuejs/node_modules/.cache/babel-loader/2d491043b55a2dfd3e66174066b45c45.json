{"remainingRequest":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\src\\views\\page\\static\\Admin\\Invite.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\src\\views\\page\\static\\Admin\\Invite.vue","mtime":1600854032901},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598802962590},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1598802962851},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":1590152956206},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598802962590},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":1598802986487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}