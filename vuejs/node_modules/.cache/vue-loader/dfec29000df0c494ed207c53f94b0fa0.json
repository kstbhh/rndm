{"remainingRequest":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\src\\views\\page\\static\\Users\\ChangePassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\src\\views\\page\\static\\Users\\ChangePassword.vue","mtime":1600781654000},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598802962590},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1598802962851},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":1590152956206},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598802962590},{"path":"C:\\Users\\Souvik\\Desktop\\gindex-v4-8.2.4\\vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":1598802986487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGFwaVJvdXRlcywgYmFja2VuZEhlYWRlcnMgfSBmcm9tICJAL3V0aWxzL2JhY2tlbmRVdGlscyI7CmltcG9ydCB7IGluaXRpYWxpemVVc2VyLCBnZXRnZHMgfSBmcm9tICJAdXRpbHMvbG9jYWxVdGlscyI7CmltcG9ydCB7IHJlbW92ZUl0ZW0gfSBmcm9tICJAdXRpbHMvZW5jcnlwdFV0aWxzIjsKaW1wb3J0IExvYWRpbmcgZnJvbSAndnVlLWxvYWRpbmctb3ZlcmxheSc7CmltcG9ydCAndnVlLWxvYWRpbmctb3ZlcmxheS9kaXN0L3Z1ZS1sb2FkaW5nLmNzcyc7CiAgICBleHBvcnQgZGVmYXVsdCB7CiAgICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBMb2FkaW5nLAogICAgICB9LAogICAgICBtZXRhSW5mbygpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGl0bGU6IHRoaXMubWV0YXRpdGxlLAogICAgICAgICAgdGl0bGVUZW1wbGF0ZTogKHRpdGxlQ2h1bmspID0+IHsKICAgICAgICAgICAgaWYodGl0bGVDaHVuayAmJiB0aGlzLnNpdGVOYW1lKXsKICAgICAgICAgICAgICByZXR1cm4gdGl0bGVDaHVuayA/IGAke3RpdGxlQ2h1bmt9IHwgJHt0aGlzLnNpdGVOYW1lfWAgOiBgJHt0aGlzLnNpdGVOYW1lfWA7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcmV0dXJuICJMb2FkaW5nLi4uIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgIH0KICAgICAgfSwKICAgICAgICBkYXRhKCl7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICB1c2VyOiB7fSwKICAgICAgICAgICAgICAgIG9sZHBhc3N3b3JkOiAiIiwKICAgICAgICAgICAgICAgIG5ld3Bhc3N3b3JkIDogIiIsCiAgICAgICAgICAgICAgICBjb25maXJtcGFzc3dvcmQ6ICIiLAogICAgICAgICAgICAgICAgZ2RzOiBbXSwKICAgICAgICAgICAgICAgIG1ldGF0aXRsZTogIkNoYW5nZSBQYXNzd29yZCIsCiAgICAgICAgICAgICAgICBjdXJyZ2Q6IHt9LAogICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiBmYWxzZSwKICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLAogICAgICAgICAgICAgICAgcmVzdWx0bWVzc2FnZTogIiIsCiAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgICAgICAgICAgIGZ1bGxwYWdlOiB0cnVlLAogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBtZXRob2RzIDogewogICAgICAgICAgICBoYW5kbGVTdWJtaXQoZSl7CiAgICAgICAgICAgICAgdGhpcy5tZXRhdGl0bGUgPSAiQ2hlY2tpbmcgJiBDaGFuZ2luZyIKICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5jb25maXJtcGFzc3dvcmQgPT09IHRoaXMubmV3cGFzc3dvcmQgJiYgdGhpcy5uZXdwYXNzd29yZC5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kYmFja2VuZC5wb3N0KGFwaVJvdXRlcy5jaGFuZ2VQYXNzd29yZFJvdXRlLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLnVzZXIuZW1haWwsCiAgICAgICAgICAgICAgICAgICAgICAgIG9sZHBhc3N3b3JkOiB0aGlzLm9sZHBhc3N3b3JkLAogICAgICAgICAgICAgICAgICAgICAgICBuZXdwYXNzd29yZDogdGhpcy5uZXdwYXNzd29yZCwKICAgICAgICAgICAgICAgICAgICB9LCBiYWNrZW5kSGVhZGVycyh0aGlzLnRva2VuLnRva2VuKSkKICAgICAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICBpZihyZXNwb25zZS5kYXRhLmF1dGggJiYgcmVzcG9uc2UuZGF0YS5yZWdpc3RlcmVkICYmIHJlc3BvbnNlLmRhdGEuY2hhbmdlZCl7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZUl0ZW0oInRva2VuZGF0YSIpOwogICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVJdGVtKCJ1c2VyZGF0YSIpOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXRhdGl0bGUgPSAiU3VjY2Vzcy4uLiI7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGJ1cy4kZW1pdCgibG9nb3V0IiwgIlVzZXIgTG9nZ2VkIE91dCIpOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWU6ICdyZXN1bHRzJywgcGFyYW1zOiB7IGlkOiB0aGlzLmN1cnJnZC5pZCwgY21kOiAicmVzdWx0Iiwgc3VjY2VzczogdHJ1ZSwgcmVkaXJlY3RVcmw6ICcvJywgdG9jbWQ6ICdsb2dpbicsIGRhdGE6IGByZXNwb25zZS5kYXRhLm1lc3NhZ2UuIFlvdSBoYXZlIHRvIFJlbG9naW4gd2l0aCBuZXcgUGFzc3dvcmRgIH0gfSkKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXRhdGl0bGUgPSAiRmFpbGVkLi4uIjsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXN1bHRtZXNzYWdlID0gcmVzcG9uc2UuZGF0YS5tZXNzYWdlOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIHRoaXMubWV0YXRpdGxlID0gIkZhaWxlZC4uLiI7CiAgICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0bWVzc2FnZSA9ICJQYXNzd29yZHMgRG8gTm90IE1hdGNoIgogICAgICAgICAgICAgICAgICB0aGlzLm5ld3Bhc3N3b3JkID0gIiI7CiAgICAgICAgICAgICAgICAgIHRoaXMuY29uZmlybXBhc3N3b3JkID0gIiI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHZhbGlkYXRlRGF0YSgpewogICAgICAgICAgICAgIGlmKHRoaXMuY29uZmlybXBhc3N3b3JkID09PSB0aGlzLm5ld3Bhc3N3b3JkICYmIHRoaXMubmV3cGFzc3dvcmQubGVuZ3RoID4gMCAmJiB0aGlzLm9sZHBhc3N3b3JkLmxlbmd0aCA+IDApewogICAgICAgICAgICAgICAgdGhpcy5kaXNhYmxlZCA9IGZhbHNlOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmRpc2FibGVkID0gdHJ1ZTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNvbXB1dGVkOiB7CiAgICAgICAgICBpc21vYmlsZSgpIHsKICAgICAgICAgICAgdmFyIHdpZHRoID0gd2luZG93LmlubmVyV2lkdGggPiAwID8gd2luZG93LmlubmVyV2lkdGggOiBzY3JlZW4ud2lkdGg7CiAgICAgICAgICAgIGlmKHdpZHRoID4gOTY2KXsKICAgICAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgc2l0ZU5hbWUoKSB7CiAgICAgICAgICAgIHJldHVybiB3aW5kb3cuZ2RzLmZpbHRlcigoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICAgICAgICByZXR1cm4gaW5kZXggPT0gdGhpcy4kcm91dGUucGFyYW1zLmlkOwogICAgICAgICAgICB9KVswXTsKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICBiZWZvcmVNb3VudCgpIHsKICAgICAgICAgIGlmKHRoaXMuJGF1ZGlvLnBsYXllcigpICE9IHVuZGVmaW5lZCkgdGhpcy4kYXVkaW8uZGVzdHJveSgpOwogICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgIHZhciB1c2VyRGF0YSA9IGluaXRpYWxpemVVc2VyKCk7CiAgICAgICAgICBpZih1c2VyRGF0YS5pc1RoZXJlKXsKICAgICAgICAgICAgaWYodXNlckRhdGEudHlwZSA9PSAiaHlicmlkIil7CiAgICAgICAgICAgICAgdGhpcy51c2VyID0gdXNlckRhdGEuZGF0YS51c2VyOwogICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHVzZXJEYXRhLmRhdGEubG9hZGluZzsKICAgICAgICAgICAgfSBlbHNlIGlmKHVzZXJEYXRhLnR5cGUgPT0gIm5vcm1hbCIpewogICAgICAgICAgICAgIHRoaXMudXNlciA9IHVzZXJEYXRhLmRhdGEudXNlcjsKICAgICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSB1c2VyRGF0YS5kYXRhLmxvYWRpbmc7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHVzZXJEYXRhLmRhdGEubG9hZGluZzsKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgICBsZXQgZ2RkYXRhID0gZ2V0Z2RzKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgICAgICAgICB0aGlzLmdkcyA9IGdkZGF0YS5nZHM7CiAgICAgICAgICB0aGlzLmN1cnJnZCA9IGdkZGF0YS5jdXJyZW50OwogICAgICAgIH0sCiAgICAgICAgd2F0Y2g6IHsKICAgICAgICAgIG9sZHBhc3N3b3JkOiAidmFsaWRhdGVEYXRhIiwKICAgICAgICAgIG5ld3Bhc3N3b3JkOiAidmFsaWRhdGVEYXRhIiwKICAgICAgICAgIGNvbmZpcm1wYXNzd29yZDogInZhbGlkYXRlRGF0YSIKICAgICAgICB9LAogICAgfQo="},null]}